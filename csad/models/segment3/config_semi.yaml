# # # # # # # # # # # # # # 
# 1. datasets
# # # # # # # # # # # # # # 
dataset: # Required.

  flip: True
  rand_resize: [0.5,2.0]
  resize_base_size: 1024
  crop:
    type: rand
    size: [800, 800]
  #---- 1) strong data augs ----#
  strong_aug:
    num_augs: 3
    flag_use_random_num_sampling: True

  ignore_label: 255

# # # # # # # # # # # # # # 
# 2. training params
# # # # # # # # # # # # # # 
trainer: # Required.
  epochs: 240
  sup_only_epoch: 0 # 0, 1
  evaluate_student: False
  optimizer:
    type: SGD
    kwargs:
      lr: 0.01 # 4GPUs
      momentum: 0.9
      weight_decay: 0.0005
  lr_scheduler:
    mode: poly
    kwargs:
      power: 0.9
  unsupervised:
    flag_extra_weak: False
    threshold: -0.7   # ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ params1: 0.7, 0.75, 0.8, 0.85, 0.9, 0.95
    loss_weight: 2.0  # ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ params2: 0.7, 1.0, 1.5, 2.0, 3.0, 4.0
    #------ 2)cutmix augs ------#
    use_cutmix: True
    use_cutmix_adaptive: True
    use_cutmix_trigger_prob: 1.0  # wide range, but trigger by 100%
    
# # # # # # # # # # # # # # 
# 3. output files, and loss
# # # # # # # # # # # # # # 
saver:
  snapshot_dir: checkpoints
  pretrain: ''
  use_tb: False

val_vis_dir: C:/Users/kev30/Desktop/anomaly/EfficientAD-res/models/segment3/vis

criterion:
  type: ohem
  kwargs:
    thresh: 0.7
    min_kept: 100000

# # # # # # # # # # # # # # 
# 4. models
# # # # # # # # # # # # # # 
net: # Required.
  num_classes: 7
  sync_bn: True
  ema_decay: 0.996
  # aux_loss:
  #   aux_plane: 1024
  #   loss_weight: 0.4
  encoder:
    # type: augseg.models.resnet.resnet101
    # pretrain: ./pretrained/resnet101.pth
    type: models.resnet.resnet50
    pretrain: C:/Users/kev30/Desktop/anomaly/EfficientAD-res/models/segment3/pretrained/resnet50.pth
    kwargs:
      zero_init_residual: True
      multi_grid: True
      replace_stride_with_dilation: [False, False, True]  # [output_stride = 16]
      # replace_stride_with_dilation: [False, True, True]  # [output_stride = 8]
  decoder:
    type: models.decoder.dec_deeplabv3_plus
    kwargs:
      inner_planes: 256
      low_conv_planes: 48 # 256
      dilations: [6, 12, 18]
      # dilations: [12, 24, 36]  # [output_stride = 8]
